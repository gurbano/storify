{
  "name": "good-squeeze",
  "version": "1.1.0",
  "description": "Transform stream for filtering events from good.",
  "main": "index.js",
  "scripts": {
    "test": "lab -m 5000 -t 100 -v -La code",
    "test-cov-html": "lab -m 5000 -r html -o coverage.html -La code"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hapijs/good-squeeze.git"
  },
  "licenses": [
    {
      "type": "BSD",
      "url": "http://github.com/hapijs/good/raw/master/LICENSE"
    }
  ],
  "homepage": "https://github.com/hapijs/good-squeeze",
  "dependencies": {
    "hoek": "2.x.x"
  },
  "devDependencies": {
    "code": "1.x.x",
    "lab": "5.x.x"
  },
  "readme": "# good-squeeze\n\nA simple transform stream for filtering events from [good](https://github.com/hapijs/good).\n\n[![Build Status](https://travis-ci.org/hapijs/good-squeeze.svg?branch=master&style=flat)](https://travis-ci.org/hapijs/good-squeeze)\n![Current Version](https://img.shields.io/npm/v/good-squeeze.svg?style=flat)\n\nLead Maintainer: [Adam Bretz](https://github.com/arb)\n\n## Usage\n\ngood-squeeze is a transform stream useful in custom good reporter clients. It should generally be used as the first step in a custom pipeline to filter out events that the current reporter isn't subscribed to.\n\n## Methods\n\n### `GoodSqueeze(events, [options])`\n\nCreates a new GoodSqueeze object where:\n\n- `events` an object where each key is a valid good event, and the value is a string or array of strings representing event tags. \"\\*\" indicates no filtering. `null` and `undefined` are assumed to be \"\\*\".\n- `options` an optional configuration object that gets passed to the Node [`Stream.Transform`](http://nodejs.org/api/stream.html#stream_class_stream_transform) constructor. **Note** `objectMode` is always `true` for all `GoodSqueeze` objects.\n\n### `GoodSqueeze.subscription(events)`\n\nA static method on `GoodSqueeze` that creates a new event subscription map where:\n\n- `events` an object where each key is a valid good event, and the value is a string or array of strings representing event tags. \"*\" indicates no filtering. `null` and `undefined` are assumed to be \"*\".\n\n```js\nvar GoodSqueeze = require('good-squeeze');\n\nGoodSqueeze.subscription({ log: 'user', ops: '*', request: ['hapi', 'foo'] });\n\n// Results in\n// {\n//     log: [ 'user' ],\n//     ops: [],\n//     request: [ 'hapi', 'foo', 'hapi', 'foo' ]\n// }\n```\n\nUseful for creating an event subscription to be used with `GoodSqueeze.filter` if you do not plan on creating a pipeline coming from good and instead want to manage event filtering manually.\n\n\n### `GoodSqueeze.filter(subscription, data)`\n\nReturns `true` if the supplied `data.event` + `data.tags` should be reported based on `subscription` where:\n\n- `subscription` - a subscription map created by `GoodSqueeze.subscription()`.\n- `data` - event object emitted from good/hapi which should contain the following keys:\n    - `event` - a string representing the event name of `data`\n    - `tags` - an array of strings representing tags associated with this event.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/good-squeeze/issues"
  },
  "_id": "good-squeeze@1.1.0",
  "_shasum": "71c716a4fb0fcf83a55a5bd7e2c468ba1e5c09d3",
  "_from": "good-squeeze@1.x.x",
  "_resolved": "http://registry.npmjs.org/good-squeeze/-/good-squeeze-1.1.0.tgz"
}
